https://www.hackerrank.com/challenges/strong-password/problem

SOLUTION
--------

class Result {

    /*
     * Complete the 'minimumNumber' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. STRING password
     */

    public static int minimumNumber(int n, String password) {
    // Return the minimum number of characters to make the password strong
        boolean numbers = false;
        boolean lower = false;
        boolean upper = false;
        boolean spl = false;
        char[] schars =  "!@#$%^&*()-+".toCharArray();
        Set<Character> special = new HashSet<>();
        for(char c:schars) {
            special.add(c);
        }
        for(int i=0;i<password.length();i++) {
            char c =   password.charAt(i);
            if(c>='a' && c<='z') lower = true;
            else if(c>='A' && c<='Z') upper = true;
            else if(c>='0' && c<='9') numbers = true;
            else if(special.contains(c)) spl = true;
        }
        int need = 0;
        need+=lower?0:1;
        need+=upper?0:1;
        need+=numbers?0:1;
        need+=spl?0:1;
        //System.out.println(need+" "+lower+" "+upper+" ");
        //finally check the length
        return n+need>=6?need:6-n;
    }

}
